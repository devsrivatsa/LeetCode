#example: [left sorted portion(4,5,6,7),(1,2,3)right sorted portion]
class Solution:
    def search(self, nums: List[int], target: int) -> int:
        l, r = 0, len(nums)-1
        while l <= r:
            mid = (l+r)//2
            if target == nums[mid]:
                return mid
            #are we in left sorted portion or right sorted portion
            if nums[mid] >= nums[l]: #we are in left sorted portion
                if target > nums[mid] or target < nums[l]:
                    l = mid + 1 #search right side
                else:
                    r = mid - 1 #search left side
            #we are in the right sorted portion 
            else:
                if target < nums[mid] or target > nums[r]:
                    r = mid - 1 #search left side
                else:
                    l = mid + 1 #search right side
        return -1

                 

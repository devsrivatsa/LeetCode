# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def countPairs(self, root: TreeNode, distance: int) -> int:
        self.count = 0
        def dfs(root, distance):
            if not root:
                return []
            if not root.left and not root.right:
                return [1] #we want list here as we want to keep track of all left node distances
            left = dfs(root.left, distance)
            right = dfs(root.right, distance)
            for i in left:
                if i >= distance:
                    continue
                for j in right:
                    if i + j <= distance:
                        self.count += 1
            return [i+1 for i in left+right] #since we are going one level up, we are adding one to each leaf
        
        dfs(root, distance)
        return self.count

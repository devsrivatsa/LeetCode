class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        m = len(grid)
        n = len(grid[0])
        memo = {i:dict() for i in range(len(grid))}
        def dp(i,j):
            if i == m-1 and j == n-1:
                return grid[m-1][n-1]
            elif i == m-1 and j != n-1:
                return grid[i][j] + dp(i, j+1)
            elif i != m-1 and j == n-1:
                return grid[i][j] + dp(i+1, j)
            else:
                if j in memo[i]:
                    return memo[i][j]
                memo[i][j] = grid[i][j] + min(dp(i, j+1), dp(i+1, j))
                return memo[i][j]
        
        return dp(0,0)

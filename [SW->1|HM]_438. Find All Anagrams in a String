from collections import Counter
class Solution:
    def findAnagrams(self, s: str, p: str) -> List[int]:
        #edge cases
        if len(p) > len(s):
            return []
        if len(p) == len(s):
            if Counter(p) == Counter(s):
                return [0]
            else:
                return []
        #common case
        l, r = 0,len(p)
        res = []
        hm1, hm2 = dict(Counter(p)), dict(Counter(s[l:r]))
        while r <= len(s):
            if hm1 == hm2: 
                res.append(l)
            if r == len(s): #this line is needed as the string indexing will overflow when r = len(s), but it is needed to include the last window in the result
                break
            #moving the fixed size window
            hm2[s[l]] -= 1
            hm2[s[r]] = hm2.get(s[r], 0) + 1                
            if hm2[s[l]] == 0:
                del hm2[s[l]]
            l += 1
            r += 1
        return res

class Solution:
    res = 0
    def rangeSumBST(self, root: Optional[TreeNode], low: int, high: int) -> int:    
        
        def iterative(root, low, high):
            if not root:
                return 0
            stack = [root]
            while stack:
                node = stack.pop()
                if node:
                    if node.val >= low and node.val <= high:
                        self.res += node.val
                    if node.val > low:
                        stack.append(node.left)
                    if node.val < high:
                        stack.append(node.right)
    
        def dfs(root, low, high):
            if root:        
                if root.val >= low and root.val <= high:
                    self.res += root.val
                if root.val > low:
                    self.rangeSumBST(root.left, low, high)
                if root.val < high:
                    self.rangeSumBST(root.right, low, high)
        
        #dfs(root, low, high)
        iterative(root, low, high)
        return self.res

class Solution:
    # diff =  3
    # array -> [0,1,4,6,7,10]
    # array - diff -> [-3,-2,1,3,4,6]
    # array - 2*diff -> [-6.-5,-2,0,1,3]
    # to select a number from nums, we need to find num - diff and num -2*diff in the original array
    def arithmeticTriplets(self, nums: List[int], diff: int) -> int:
        res = 0
        hs = set()
        for n in nums:
            if n-diff in hs and n - 2*diff in hs:
                res += 1
            hs.add(n)
        return res


########################################## Rust ##########################################################

use std::collections::HashSet;

impl Solution {
    pub fn arithmetic_triplets(nums: Vec<i32>, diff: i32) -> i32 {
        let mut hs:HashSet<i32> = HashSet::new();
        let mut res = 0;
        for n in nums {
            if hs.contains(&(n - diff)) && hs.contains(&(n - 2*diff)) {
                res += 1
            }
            hs.insert(n);
        }
        res
    }
}
